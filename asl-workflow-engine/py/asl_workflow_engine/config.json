{
    "event_queue": {
        "comment": "instance_id should be unique for each instance of the workflow engine in a cluster. It will be used to create a unique per-instance event queue.",
        "queue_name": "asl_workflow_events",
        "instance_id": "9256f7e8-55ec-47ea-885e-8ee1f922efa8",
        "queue_type": "AMQP-0.9.1",
        "connection_url": "amqp://localhost:5672?connection_attempts=20&retry_delay=10&heartbeat=0",
        "connection_options": ""
    },
    "notifier": {
        "comment": "The topic the workflow engine will publish notifications to. These are rather like AWS CloudWatch events. This currently maps to an AMQP topic exchange and if it is not the default amq.topic then an address string describing the node should be used with full x-declare syntax so that the exchange is declared before it is used.",
        "topic": "{\"node\": {\"x-declare\": {\"exchange\": \"asl_workflow_engine\", \"exchange-type\": \"topic\", \"durable\": true}}}"
    },
    "state_engine": {
        "comment": "The store_url is either a simple JSON file, e.g. ASL_store.json or a Redis URL, e.g. redis://localhost:6379?connection_attempts=20&retry_delay=10. The execution_ttl is the time to live, in seconds, for the execution metadata used by DescribeExecution and GetExecutionHistory. The initial default is one day 60x60x24 = 86400. Whether to raise or lower this value will depend on the available memory of the Redis server. The execution_ttl is only honoured by the Redis store and is ignored by the simple store.",
        "store_url": "ASL_store.json",
        "execution_ttl": 86400
    },
    "rest_api": {
        "host": "0.0.0.0",
        "port": 4584,
        "region": "local"
    },
    "tracer": {
        "implementation": "Jaeger",
        "service_name": "asl_workflow_engine",
        "config": {
            "sampler": {
                "type": "const",
                "param": 1
            },
            "logging": false
        }
    },
    "metrics": {
        "implementation": "Prometheus",
        "config": {
            "port": 9091
        }
    }
}
